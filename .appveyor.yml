clone_depth: 1 # NB: this stops FIO-VERSION-GEN making tag based versions

image:
  - Visual Studio 2019

environment:
  CYG_MIRROR: http://cygwin.mirror.constant.com
  matrix:
    - ARCHITECTURE: x64
      CC: clang
      CONFIGURE_OPTIONS: --enable-pdb
      DISTRO: msys2
# Skip 32 bit clang build
#    - ARCHITECTURE: x86
#      CC: clang
#      CONFIGURE_OPTIONS: --enable-pdb
#      DISTRO: msys2
    - ARCHITECTURE: x64
      CONFIGURE_OPTIONS:
      DISTRO: cygwin
    - ARCHITECTURE: x86
      CONFIGURE_OPTIONS: --build-32bit-win
      DISTRO: cygwin

install:
  - if %DISTRO%==cygwin (
      SET "PATH=C:\cygwin64\bin;C:\cygwin64;%PATH%"
    )
  - if %DISTRO%==msys2 if %ARCHITECTURE%==x86 (
      SET "PATH=C:\msys64\mingw32\bin;C:\msys64\usr\bin;%PATH%"
    )
  - if %DISTRO%==msys2 if %ARCHITECTURE%==x64 (
      SET "PATH=C:\msys64\mingw64\bin;C:\msys64\usr\bin;%PATH%"
    )
  - SET PATH=C:\Python38-x64;%PATH% # NB: Changed env variables persist to later sections
  - SET PYTHONUNBUFFERED=TRUE
  - bash.exe ci\appveyor-install.sh

build_script:
  - bash.exe configure --extra-cflags=-Werror --disable-native %CONFIGURE_OPTIONS%
  - make.exe -j2

after_build:
  - file.exe fio.exe
  - make.exe test
  - 'cd os\windows && dobuild.cmd %ARCHITECTURE% && cd ..'
  - ps: Get-ChildItem .\os\windows\*.msi | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name -DeploymentName fio.msi }

test_script:
  - python.exe t/run-fio-tests.py --artifact-root test-artifacts --debug

on_finish:
  - 'bash.exe -lc "cd \"${APPVEYOR_BUILD_FOLDER}\" && [ -d test-artifacts ] && 7z a -t7z test-artifacts.7z test-artifacts -xr!foo.0.0 -xr!latency.?.0 -xr!fio_jsonplus_clat2csv.test && appveyor PushArtifact test-artifacts.7z'
